//安装完成后设置本地账号
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"
//创建版本仓库
$ mkdir learngit
$ git init
//添加一个或多个文件
touch readme.txt
$ git add readme.txt
$ git commit -m "wrote a readme file"
//修改文件
$ git status
$ git diff readme.txt 
$ git add readme.txt
$ git commit -m "add distributed"
//修改日志 及版本回退
$ git log --pretty=oneline
git reset --hard HEAD^
git reset --hard 4550e9e1e18d98
git reflog   //查看历史提交的版本号 以方便回退t 
//工作区和版本库最新版本的区别
//修改时的流程：先把修改的内容提交到缓存区（add）（.git） commit的时候才把缓存区的内容提交到工作区
diff HEAD -- readme.txt
//撤销修改
git checkout -- file   //撤回工作区的修改
git reset HEAD file //撤回暂存区的修改
//删除文件
git rm file //彻底删除文件
git checkout -- file //恢复工作区被删除的文件
//远程仓库
ssh-keygen -t rsa -C "youremail@example.com"   //生成ssh的公钥和私钥
git remote add origin https://github.com/baizhanlin/test.git //关联远程仓库
git push -u origin master //第一次推送master分支的所有内容
git push origin master //以后每次提交后推送最新的修改
git clone https://github.com/baizhanlin/test.git //从远程库拉区资源
//分支
git checkout -b dev //创建并切换到分支
git branch dev //创建分支
git checkout dev //切换分支
git branch //显示所有分支
git merge dev //合并分支
git branch -d dev //删除分支:
gitt log --graph --pretty=oneline --abbrev-commit //查看分支的合并情况
git merge --no-ff -m "merge with no-ff" dev //merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息
git stash //把当前工作现场“储藏”起来，等以后恢复现场后继续工作
git stash list// 查看工作现场
git stash apply stash@{0} //恢复到指定工作现场
git stash drop stash@{0} //删除指定工作现场
git stash pop //恢复并删除工作现场
git cherry-pick 4c805e2//复制特定提交到当前分支
git branch -D <name>//强行删除分支
//多人协助
git remote -v //查看远程库的信息
git checkout -b branch-name origin/branch-name  //在本地创建和远程分支对应的分支 名字最好保持一致
git push origin <branch-name> //推送自己的修改
git pull//如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并
git push origin <branch-name> //没有冲突或者解决掉冲突后，再用git push origin <branch-name>推送就能成功！
git branch --set-upstream-to <branch-name> origin/<branch-name> //git pull提示no tracking information，则说明本地分支和远程分支的链接关系没有创建，用命令
//标签
git tag <tagname> <commitID> //创建一个新的标签，默认在HEAD(当请的commit上)，也可以指定一个coomit id
git tag //显示当请所有标签
git push origin v1.5 //共享标签 推送的时候需要显式的标注
git tag -d v0.1 //删除标签
git push origin --tags //一次性推送所有本地未被推送到远程的标签
git push origin :refs/tags/v0.9 //删除远程的标签


